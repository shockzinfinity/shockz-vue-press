(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{629:function(a,e,s){"use strict";s.r(e);var t=s(25),r=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"podman"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#podman"}},[a._v("#")]),a._v(" Podman")]),a._v(" "),e("TagLinks"),a._v(" "),e("blockquote",[e("p",[a._v("테스트 환경 : CentOS 8"),e("br"),a._v(" "),e("a",{attrs:{href:"http://api.shockz.io:8080",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://api.shockz.io:8080"),e("OutboundLink")],1),e("br"),a._v(" "),e("a",{attrs:{href:"http://api.shockz.io:8081",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://api.shockz.io:8081"),e("OutboundLink")],1),e("br"),a._v(" "),e("a",{attrs:{href:"http://api.shockz.io:8082",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://api.shockz.io:8082"),e("OutboundLink")],1)])]),a._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#기본-명령어"}},[a._v("기본 명령어")])]),e("li",[e("a",{attrs:{href:"#pod-단위가-아닌-container-단위로-port-mapping-시-rootless-환경"}},[a._v("pod 단위가 아닌 container 단위로 port mapping 시... (rootless 환경)")])]),e("li",[e("a",{attrs:{href:"#reference"}},[a._v("Reference")])])])]),e("p"),a._v(" "),e("h2",{attrs:{id:"기본-명령어"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#기본-명령어"}},[a._v("#")]),a._v(" 기본 명령어")]),a._v(" "),e("blockquote",[e("p",[a._v("build 및 run")])]),a._v(" "),e("ul",[e("li",[a._v("podman ps -a")]),a._v(" "),e("li",[a._v("podman pod ls")]),a._v(" "),e("li",[a._v("podman pod stop "),e("em",[a._v("podName")])]),a._v(" "),e("li",[a._v("podman pod rm -f "),e("em",[a._v("podName")]),a._v(" (force)")]),a._v(" "),e("li",[a._v("podman pod create --name "),e("em",[a._v("podName")]),a._v(" -p "),e("em",[a._v("hostPort")]),a._v(":"),e("em",[a._v("containerInnerPort")])]),a._v(" "),e("li",[a._v("podman system prune -a (모든 이미지 삭제)")]),a._v(" "),e("li",[a._v("podman rmi "),e("em",[a._v("imageId")])]),a._v(" "),e("li",[a._v("podman volume ls")]),a._v(" "),e("li",[a._v("podman volume create "),e("em",[a._v("volumeName")])]),a._v(" "),e("li",[a._v("podman build -t docker.io/shockz(계정명)/imageName:(태그) .")]),a._v(" "),e("li",[a._v("podman run -itd --pod="),e("em",[a._v("podName")]),a._v(" --name "),e("em",[a._v("containerName")]),a._v(" "),e("em",[a._v("sourceImageName")])])]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# pod 생성")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# db data 를 위한 volume 생성")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" volume create mongodb_dev\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# pod 를 이용하면 pod 간 독립적인 네트워크가 생성됨 (rootless)")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# rootfull : 루트사용자")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# rootless : 일반사용자")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 그러므로 port 연결은 pod 단위로 매핑하여 연결하는 것이 수월함")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -p 8080:3000 => 외부 노출 포트(8080) : pod 내부 포트(3000)")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -p 27017:27017 => 외부(원격지에서 compass 로 확인하기 위한 포트) : pod 내부 mongodb 포트 (27017)")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" pod create "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" my-pod "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":3000 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("27017")]),a._v(":27017\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 임시 테스트 이미지 생성")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker.io registry 에 push/pull 을 위해서는 build 시에 registry를 명시해줘야 함")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" build "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" nodetest:0.1 "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\nor\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" build "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-t")]),a._v(" docker.io/shockz/nodetest:0.1 "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker.io 에 push/pull 할 경우,")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" login docker.io\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" push docker.io/shockz/nodetest:0.1\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 확인을 위해 모든 이미지 삭제")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" system prune "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" pull docker.io/shockz/nodetest:0.1\n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--pod")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("my-pod "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" nodetest nodetest:0.1\nor\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-itd")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--pod")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("my-pod "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" nodetest nodetest:0.1\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 외부 테스트를 위한 방화벽 포트 오픈")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" firewall-cmd "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zone")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v("/tcp\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" firewall-cmd "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--zone")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("public --add-port"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("27017")]),a._v("/tcp\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 데이터 볼륨 연결 (vscode ssh development 로 연결할것이기 때문에 소스 변경 후 바로 적용되도록 하기 위함)")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 주의사항 : 데이터 볼륨 연결 덕분에 node_modules 가 재 복사 되는 문제가 발생하므로 별도의 podman volume를 생성할 필요가 있음")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--pod")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("my-pod "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" mongodb "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--expose")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("27017")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MONGO_INITDB_ROOT_USERNAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("root "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MONGO_INITDB_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1234")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" mongodb_dev:/data/db mongo "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# podman volume 사용")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-itd")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--pod")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("my-pod "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /home/shockz/nodetest:/usr/src/nodetest "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" nodetest nodetest:0.4 "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# host 의 파일시스템 연결")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# generate YAML & kubernates")]),a._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" generate kube my-pod "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" my-pod.yaml\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" play kube ./my-pod.yaml\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br"),e("span",{staticClass:"line-number"},[a._v("30")]),e("br"),e("span",{staticClass:"line-number"},[a._v("31")]),e("br"),e("span",{staticClass:"line-number"},[a._v("32")]),e("br"),e("span",{staticClass:"line-number"},[a._v("33")]),e("br"),e("span",{staticClass:"line-number"},[a._v("34")]),e("br"),e("span",{staticClass:"line-number"},[a._v("35")]),e("br"),e("span",{staticClass:"line-number"},[a._v("36")]),e("br"),e("span",{staticClass:"line-number"},[a._v("37")]),e("br"),e("span",{staticClass:"line-number"},[a._v("38")]),e("br"),e("span",{staticClass:"line-number"},[a._v("39")]),e("br"),e("span",{staticClass:"line-number"},[a._v("40")]),e("br"),e("span",{staticClass:"line-number"},[a._v("41")]),e("br")])]),e("h2",{attrs:{id:"pod-단위가-아닌-container-단위로-port-mapping-시-rootless-환경"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod-단위가-아닌-container-단위로-port-mapping-시-rootless-환경"}},[a._v("#")]),a._v(" pod 단위가 아닌 container 단위로 port mapping 시... (rootless 환경)")]),a._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" pod create "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" servers "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--share")]),a._v(" cgroup,ipc,uts\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--pod")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("servers "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" mongodb "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("27017")]),a._v(":27017 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MONGO_INITDB_ROOT_USERNAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("root "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MONGO_INITDB_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1234")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" mongodb_dev:/data/db mongo\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-itd")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--pod")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("servers "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /home/shockz/nodetest:/usr/src/nodetest "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":3000 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" nodetest1 nodetest:0.5\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-itd")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--pod")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("servers "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /home/shockz/nodetest:/usr/src/nodetest "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8081")]),a._v(":3000 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" nodetest2 nodetest:0.5\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" run "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-itd")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--pod")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("servers "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /home/shockz/nodetest:/usr/src/nodetest "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8082")]),a._v(":3000 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" nodetest3 nodetest:0.5\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 이후 nginx reverse proxy 에서 load balancing...")]),a._v("\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("h2",{attrs:{id:"reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[a._v("#")]),a._v(" Reference")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.redhat.com/sysadmin/container-networking-podman",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.redhat.com/sysadmin/container-networking-podman"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://www.redhat.com/sysadmin/compose-podman-pods",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.redhat.com/sysadmin/compose-podman-pods"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://developers.redhat.com/blog/2019/01/15/podman-managing-containers-pods/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://developers.redhat.com/blog/2019/01/15/podman-managing-containers-pods/"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://www.redhat.com/sysadmin/behind-scenes-podman",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.redhat.com/sysadmin/behind-scenes-podman"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://balagetech.com/convert-docker-compose-services-to-pods/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://balagetech.com/convert-docker-compose-services-to-pods/"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://balagetech.com/managing-podman-pods-with-pods-compose",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://balagetech.com/managing-podman-pods-with-pods-compose"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://stackoverflow.com/questions/60558185/is-it-possible-to-run-two-containers-in-same-port-in-same-pod-by-podman",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://stackoverflow.com/questions/60558185/is-it-possible-to-run-two-containers-in-same-port-in-same-pod-by-podman"),e("OutboundLink")],1)])])],1)}),[],!1,null,null,null);e.default=r.exports}}]);